Metadata-Version: 2.4
Name: carfinder
Version: 0.1.0
Summary: Simple Craigslist car scraper + CSV/SQLite + quick EDA
Author: Your Name
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests>=2.31
Requires-Dist: beautifulsoup4>=4.12
Requires-Dist: lxml>=5.0
Requires-Dist: pandas>=2.0
Provides-Extra: dev
Requires-Dist: pytest>=8.0; extra == "dev"
Requires-Dist: black>=24.0; extra == "dev"
Requires-Dist: ruff>=0.4; extra == "dev"
Dynamic: license-file

[![CI](https://github.com/albertainstian/car_webscaper_data_ai_ml/actions/workflows/python-tests.yml/badge.svg?branch=main)](https://github.com/albertainstian/car_webscaper_data_ai_ml/actions/workflows/python-tests.yml) [![codecov](https://codecov.io/gh/albertainstian/car_webscaper_data_ai_ml/branch/main/graph/badge.svg)](https://codecov.io/gh/albertainstian/car_webscaper_data_ai_ml) ![License](https://img.shields.io/badge/license-MIT-blue.svg)
[![Python tests](https://github.com/albertainstian/car_webscaper_data_ai_ml/actions/workflows/python-tests.yml/badge.svg?branch=main)](https://github.com/albertainstian/car_webscaper_data_ai_ml/actions/workflows/python-tests.yml)
[![Python tests](https://github.com/albertainstian/car_webscaper_data_ai_ml/actions/workflows/python-tests.yml/badge.svg?branch=main)](https://github.com/albertainstian/car_webscaper_data_ai_ml/actions/workflows/python-tests.yml)
[![Python tests](https://github.com/albertainstian/car_webscaper_data_ai_ml/actions/workflows/python-tests.yml/badge.svg?branch=main)](https://github.com/albertainstian/car_webscaper_data_ai_ml/actions/workflows/python-tests.yml)
# Car Finder ‚Äî Craigslist Scraper (CSV/SQLite + Quick EDA)

Scrape car listings from Craigslist by **query** and **region(s)**, save to **CSV/SQLite**, and run a tiny **EDA** to visualize prices. Built as a lightweight, production-ish Python project you can extend.

<!-- (Optional badges ‚Äî update owner/repo if you want) -->
<!-- [![CI](https://github.com/<owner>/<repo>/actions/workflows/ci.yml/badge.svg)](https://github.com/<owner>/<repo>/actions/workflows/ci.yml) -->
<!-- ![Python](https://img.shields.io/badge/python-3.10%2B-blue) -->

## Features
- üß≠ Search multiple regions in one run
- ‚è±Ô∏è Rate-limit friendly with `--sleep`
- üßπ Dedupe and optional `--since` filter (last N days)
- üíæ Outputs: CSV and/or SQLite
- üìä Quick EDA script to plot a price histogram
- üß™ Tests + (optional) CI wiring

## Quickstart

```bash
python -m pip install --upgrade pip
pip install requests beautifulsoup4 lxml pandas matplotlib

python carfinder.py \
  --query "Mazda CX-30" \
  --regions losangeles sandiego sfbay \
  --limit 30 --sleep 1.5 --since 14 \
  --out data/cx30.csv



# Example: Mazda CX-30 across LA, SD, SF Bay
car-find search \
  --query "Mazda CX-30" \
  --regions losangeles sandiego sfbay \
  --limit 50 --sleep 1.5 --since 14 \
  --out data/cx30.csv --db data/cars.db
**CLI:** `car-find ...`  
**Module:** `python -m carfinder ...`
